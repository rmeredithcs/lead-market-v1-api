{
  "openapi": "3.0.0",
  "info": {
    "title": "Lead Market API",
    "version": "1.0",
    "x-logo": {
      "url": "lead_market_logo.png"
    },
    "description": "The Lead Market API allows you to:\n- Create and update leads to sell via Lead Market.\n- Manage blacklists to avoid buying specific leads.\n- Provide progress updates and outcomes for purchased leads.\n- Retrieve the status or details of a lead.\n- Request delivery of the Credit Sense report for a bought lead.\n- Update the reference for a lead's Credit Sense application.\n\n### About these API docs\nThese API docs are provided in OpenAPI Specification (OAS) format for your reference. Use the `Download` button atop this page to download these API docs as an OAS 3-compliant JSON document that you can import into the API client of your choice (e.g. [Postman](https://www.postman.com/), [Insomnia](https://insomnia.rest/), [Swagger Inspector](https://inspector.swagger.io/builder)).\n\nYou can also click one of the buttons below to import the API spec into an API client you have installed.\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/da63c952ac2450a1701c)\n[![Run in Insomnia}](https://insomnia.rest/images/run.svg)](https://insomnia.rest/run/?label=Lead%20Market%20API&uri=https%3A%2F%2Fapi-docs.creditsense.com.au%2Flead-market%2Fv1%2FLead-Market-API.v1.json)\n\nClick the chevrons next to object names and response codes to expand out the request and response schemas.\n![alt text](https://rmeredithcs.github.io/lead-market-v1-api/API_docs_guide.gif \"API docs guide screen recording\")\n\n### Request URL\nThe request URL is built using multiple components - `{protocol}` `{base-url}` `{version}` `{api-key}` `{endpoint}`\n1. All calls to the API must be made using the TLS **protocol** - `https://`\n2. The **base URL** is always [api.leadmarketonline.com](api.leadmarketonline.com) - `https://api.leadmarketonline.com`\n3. The current **version** is v1 - `https://api.leadmarketonline.com/v1`\n4. The **API key** will be unique to your environment - `https://api.leadmarketonline.com/v1/xxx-xxx-xxx`\n5. The **endpont** will be determined by what you're trying to do - `https://api.leadmarketonline.com/v1/xxx-xxx-xxx/exampleEndpoint`\n\n### Authentication\nEach call to the API requires:\n- **API key** - identifies your account; forms part of the request URL.\n- **API token** - identifies your access to the API; included in the `Settings` object in your request body.\n\nIf you don't have your API credentials or you'd like them to be changed, please [contact us](mailto:support@leadmarketonline.com).\n\n### Rate Limiting *****IS THIS A THING ON LEAD MARKET?*****\nThe API is rate limited at one API call per second, with the ability to handle a burst of up to 20 API calls depending on the amount of API credits available.\n\n#### How do API credits work?\n- Every API call uses an API credit. \n- Your account receives one API credit every one second and can accrue a maximum of 20 credits at any time.\n- When your API credits run out the API will return a '429 - Too Many Requests' status code, indicating that you will need to retry your API call after waiting for your API credit balance to increase.",
    "contact": {
      "name": "Lead Market Support",
      "url": "https://leadmarketonline.com/contact",
      "email": "support@leadmarketonline.com"
    }
  },
  "servers": [
    {
      "url": "https://api.leadmarketonline.com/v1/{api-key}",
      "description": "Lead Market API",
      "variables": {
        "api-key": {
          "default": "your-api-key-goes-here",
          "description": "The unique key that identifies your account."
        }
      }
    }
  ],
  "paths": {
    "/application/single": {
      "post": {
        "summary": "Add a lead",
        "operationId": "post-application-single",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Warnings": {
                      "type": "array",
                      "description": "A list of warnings. e.g. features that are soon to be deprecated or features that are not yet supported by the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Success": {
                      "type": "boolean",
                      "description": "Denotes whether the lead was successfully created.",
                      "default": "True"
                    },
                    "Data": {
                      "type": [
                        "integer",
                        "object"
                      ],
                      "description": "The Lead ID as an integer or an object containing the Lead ID and Lead Token.",
                      "properties": {
                        "Lead_ID": {
                          "type": "integer",
                          "example": 6605347,
                          "description": "Uniquely identifies the lead across Lead Market."
                        },
                        "Lead_Token": {
                          "type": "string",
                          "example": "zh9DSv",
                          "description": "Uniquely identifies the lead across Lead Market for the Seller."
                        }
                      }
                    }
                  },
                  "required": [
                    "Warnings",
                    "Success",
                    "Data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Errors": {
                      "type": "array",
                      "description": "A list of errors.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error_type": {
                            "type": "string",
                            "default": "unauthorized",
                            "description": "Denotes the type of error encountered."
                          },
                          "error_code": {
                            "type": "string",
                            "default": "401.1",
                            "description": "The code that identifies the error."
                          },
                          "error_message": {
                            "type": "string",
                            "default": "Invalid API key.",
                            "description": "Describes the error."
                          }
                        },
                        "required": [
                          "error_type",
                          "error_code",
                          "error_message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "Errors"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Retrieve reports in the requested formats for a specified application.\n\nReasons to use this endpoint:\n- Create a disengaged lead and push it into the market for sale.\n- Pass in lead details for an engaged lead that will be retrieved when the lead is pushed into the market.\n\n### Non-compliant HTTP status codes\nWe have some non-compliant status codes that are returned in place of recognised HTTP status codes when specific errors occur.\n\n#### 701: Schema Validation Error\nSchema validation errors indicate that the data you've provided is invalid XML or it doesn't conform to our Seller schema.\n\n##### Example errors\n| Error message                                                                                                                        | Possible cause                                                                                                                           |\n|--------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n| Fatal Error 4: Start tag expected, '<' not found                                                                                     | Missing '<' at beginning of document.                                                                                                    |\n| Error 1872: The document has no document element.                                                                                    | Missing root element. This may also show in various other situations, including if you do not escape xml reserved characters (like \"&\"). |\n| Error 1826: Element 'Application_Date': '2016-08-10b' is not a valid value of the union type 'L_Empty_Date'.                         | Date supplied is in incorrect format.                                                                                                    |\n| Error 1843: Element 'Application': Character content other than whitespace is not allowed because the content type is 'element-only' | Some text is not properly contained in an element.                                                                                       |\n| Fatal Error 76: Opening and ending tag mismatch: Lead line 1 and Seller_Data                                                         | A tag has not been correctly opened or closed.                                                                                           |\n\n#### 702: Authentication Error\nAuthentication errors errors indicate that you're not authorised to perform the requested actions.\n\n##### Example errors\n| Error message                                                                       | Possible cause                                                                                                        |\n|-------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| Invalid API_Token                                                                   | The API_Token you passed in doesn't match the API_Key you used in the url.                                            |\n| Invalid CS_App_ID for API_Token                                                     | CS_App_ID doesn't exist or doesn't belong to you.                                                                     |\n| Invalid Lead_ID for API_Token                                                       | Lead_ID doesn't exist or doesn't belong to you.                                                                       |\n| Invalid Buyer_Token for API_Token                                                   | The Buyer_Token provided does not correspond to any leads you have purchased.                                         |\n| Invalid CS_App_ID for Client_ID                                                     | If you use the optional Client_ID parameter in settings. CS_App_ID doesn't exist or doesn't belong to this Client_ID. |\n| Client_ID not valid for API_Token                                                   | The Client_ID supplied doesn't exist or doesn't belong to you.                                                        |\n| Your API Key has not been activated yet, please contact us to activate your API key | The API profile your provided credentials link to is inactive. Contact us to activate it.                             |\n\n#### 703: Data Error\nData errors indicate that there's a mismatch between multiple bits of data you've provided.\n\n##### Example errors\n| Error message                                                                                                                              | Possible cause                                                                                                                                                                             |\n|--------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Lead_ID and CS_App_ID don't match                                                                                                          | If you have provided both Lead_ID and CS_App_ID, these two numbers don't match on our database.                                                                                            |\n| The Credit Sense application was completed more then 24 hours ago. For a lead to be sold the application must be completed within 24 hours | The CS_App_ID you have provided references a Credit Sense application that was completed more than 24 hours ago. For a lead to be sold, the application must be completed within 24 hours. |\n| The fields 'Lead_ID' and 'Buyer_Token' were both missing, please include one in your API call                                              | You have not provided either Lead_ID or Buyer_Token; one must be provided.                                                                                                                 |\n| The fields 'Lead_ID' and 'Buyer_Token' were both present, please include only one in your API call                                         | You have provided both Lead_ID and Buyer_Token; only one may be provided.                                                                                                                  |\n| Settings object key: 'App_Reference' has not been provided                                                                                 | The App_Reference parameter is missing from the API call.                                                                                                                                  |\n\n#### 704: Other Error\nOther errors indicate that there's a generic problem, not described above.\n\n| Error message                                                                                                                                                                                  | Possible cause                                                                              |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|\n| The API credentials you have provided are testing credentials and you haven't provided a valid Test_Sale_Outcome. When using test credentials you must include the Test_Sale_Outcome parameter | You're testing against a dev/test org unit and failed to pass in a valid test sale outcome. |",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Settings": {
                    "type": "object",
                    "required": [
                      "API_Token"
                    ],
                    "description": "A JSON-encoded object containing all the settings for your request.",
                    "properties": {
                      "API_Token": {
                        "type": "string",
                        "description": "The unique token that identifies your API access privileges.",
                        "example": "daf90138-569f-4488-9f3b-099a58ac4130"
                      },
                      "Test_Sale_Outcome": {
                        "type": "integer",
                        "description": "The test sale outcome code you specify will determine the sale outcome to be returned. This is used for testing purposes only.",
                        "enum": [
                          1,
                          2,
                          3,
                          4
                        ]
                      },
                      "Client_ID": {
                        "type": "integer",
                        "description": "When provided, overrides the default Lead Market org unit attached to the API profile and creates the lead against the specified org unit.",
                        "example": 501
                      }
                    }
                  },
                  "Payload": {
                    "type": "string",
                    "example": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <Lead>     <Seller_Data>         <Client_Authority>true</Client_Authority>         <Customer_Authority>true</Customer_Authority>         <Customer_Authority_Type>Explicit</Customer_Authority_Type>         <CS_App_ID>1577794</CS_App_ID>         <Use_MLM_Flow>true</Use_MLM_Flow>         <Lead_Reference>MyExampleRef0001</Lead_Reference>     </Seller_Data>     <Application>         <Application_Date>2016-08-10</Application_Date>         <Amount>200</Amount>         <Reason>Other – Test</Reason>     </Application>     <Applicant>         <Applicant_Type>Primary</Applicant_Type>         <Person_Applicant>             <Title>Mr</Title>             <Date_Of_Birth>1980-01-01</Date_Of_Birth>             <Last_Name>Ward</Last_Name>             <First_Name>Fredrick</First_Name>             <Marital_Status></Marital_Status>             <Contact_Methods>                 <Contact_Method>                     <Contact_Other>                         <Contact_Type>MOB</Contact_Type>                         <Contact_Value>0412341234</Contact_Value>                     </Contact_Other>                 </Contact_Method>             </Contact_Methods>         </Person_Applicant>     </Applicant> </Lead>",
                    "description": "Contains the details of the lead in XML format in accordance with our Seller schema."
                  }
                },
                "required": [
                  "Settings",
                  "Payload"
                ]
              }
            }
          },
          "description": "### Testing sale outcomes\nPass a test sale outcome from the below table into `$.Settings.Test_Sale_Outcome` to simulate having a lead sell or fail to sell.\nProviding a test sale outcome is required if using API credentials linked to a test environment and an error will be returned if it is omitted.\nProviding a test sale outcome is not permitted if using API credentials linked to a production environment and an error will be returned if it is included.\nAny errors encountered processing your request will override your specified test sale outcome - i.e. you must provide valid data in order to test sale outcomes.\n\n| Code | Name         | Description                                                                                                                                                                                                                                                                  |\n|------|--------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1    | Make sale    | Results in the lead being sold and sold lead notifications will trigger. Use this outcome to how your system handles sold leads.                                                                                                                                             |\n| 2    | No Buyer     | Results in the lead being returned due to no buyer and unsold lead notifications will trigger. Use this outcome to how your system handles unsold leads.                                                                                                                     |\n| 3    | Already Sold | Results in the lead being returned due to the lead already existing on the market."
        },
        "parameters": []
      }
    },
    "/application/status": {
      "post": {
        "summary": "Get the status of a lead",
        "operationId": "post-application-status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Warnings": {
                      "type": "array",
                      "description": "A list of warnings. e.g. features that are soon to be deprecated or features that are not yet supported by the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Success": {
                      "type": "boolean",
                      "description": "Denotes whether the lead status was successfully returned.",
                      "default": "True"
                    },
                    "Data": {
                      "type": "object",
                      "description": "An object containing status information about the lead.",
                      "required": [
                        "Status_Type_Code",
                        "Status_Type_Description",
                        "Status_Code",
                        "Status_Description",
                        "Sale_Data"
                      ],
                      "properties": {
                        "Status_Type_Code": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "description": "The code that identifies the status type."
                        },
                        "Status_Type_Description": {
                          "type": "string",
                          "enum": [
                            "Bought",
                            "On Market",
                            "Sold",
                            "Recalled",
                            "Preparing to Sell"
                          ],
                          "description": "Describes the status type."
                        },
                        "Status_Code": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            20,
                            21,
                            22
                          ],
                          "description": "The code that identifies the status."
                        },
                        "Status_Description": {
                          "type": "string",
                          "enum": [
                            "Bought",
                            "Bought - Cust Notified",
                            "Resell Pending",
                            "Pending CS App",
                            "Analysing Data",
                            "On Market",
                            "Waiting Sale",
                            "Sold",
                            "Sold - Cust Notified",
                            "Recalled",
                            "Recalled - Lead already on market",
                            "Recalled - No Buyer",
                            "Recalled - Lead already on market by same seller",
                            "Pending Client",
                            "Error - no active bid on client"
                          ],
                          "description": "Describes the status."
                        },
                        "Sale_Data": {
                          "type": "object",
                          "description": "An object containing sale data if the lead is sold or bought. If the lead isn't sold or bought, the value will be `null`.",
                          "properties": {
                            "LM_SaleDT": {
                              "type": "string",
                              "example": "2020-07-25 14:56:28.9966667",
                              "description": "The date-time of the sale."
                            },
                            "Lead_Price": {
                              "type": "number",
                              "example": 21,
                              "description": "The sale price for the lead."
                            },
                            "Lead_ID": {
                              "type": "integer",
                              "example": 6605347,
                              "description": "Uniquely identifies the lead across Lead Market."
                            },
                            "CS_App_ID": {
                              "type": "integer",
                              "example": 1234567,
                              "description": "Our unique identifier for the Credit Sense application."
                            },
                            "Sale_Base_Amount": {
                              "type": "number",
                              "example": 15,
                              "description": "The base sale amount for the lead."
                            },
                            "Sale_Base_Amount_Tax": {
                              "type": "number",
                              "example": 1.5,
                              "description": "The tax amount for the base sale amount of the lead. This will be `0` if no tax is due for the sale."
                            },
                            "Sale_Trade_Comm_Amount": {
                              "type": "number",
                              "example": 3,
                              "description": "The trade commission amount for the lead."
                            },
                            "Sale_Trade_Comm_Amount_Tax": {
                              "type": "number",
                              "example": 0.3,
                              "description": "The tax amount for the trade comission on the lead. This will be `0` if no tax is due for the sale."
                            },
                            "Sale_Net_Amount": {
                              "type": "number",
                              "example": 22.25,
                              "description": "**Sellers:** The base sale amount less the trade comission.\n**Buyers:** The base sale amount plus the trade comission.\nAll amounts are tax-inclusive."
                            },
                            "Sale_Currency": {
                              "type": "string",
                              "enum": [
                                "AUD",
                                "CAD",
                                "GBP",
                                "NZD"
                              ],
                              "description": "Denotes the [currency](https://www.iban.com/currency-codes) that lead sale amounts are expressed in."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "Warnings",
                    "Success",
                    "Data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Errors": {
                      "type": "array",
                      "description": "A list of errors.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error_type": {
                            "type": "string",
                            "default": "unauthorized",
                            "description": "Denotes the type of error encountered."
                          },
                          "error_code": {
                            "type": "string",
                            "default": "401.1",
                            "description": "The code that identifies the error."
                          },
                          "error_message": {
                            "type": "string",
                            "default": "Invalid API key.",
                            "description": "Describes the error."
                          }
                        },
                        "required": [
                          "error_type",
                          "error_code",
                          "error_message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "Errors"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Errors": {
                      "type": "array",
                      "description": "A list of errors.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error_type": {
                            "type": "string",
                            "default": "not_found",
                            "description": "Denotes the type of error encountered."
                          },
                          "error_code": {
                            "type": "string",
                            "default": "404.1",
                            "description": "The code that identifies the error."
                          },
                          "error_message": {
                            "type": "string",
                            "default": "No endpoint exists for this URL.",
                            "description": "Describes the error."
                          }
                        },
                        "required": [
                          "error_type",
                          "error_code",
                          "error_message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "Errors"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Applications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "API_Token": {
                    "type": "string",
                    "example": "daf90138-569f-4488-9f3b-099a58ac4130",
                    "description": "The unique token that identifies your API access privileges."
                  },
                  "Lead_ID": {
                    "type": "integer",
                    "example": 6605347,
                    "description": "Uniquely identifies the lead across Lead Market."
                  }
                },
                "required": [
                  "API_Token",
                  "Lead_ID"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Get the status of a specific lead.\n\nReasons to use this endpoint:\n- Understand whether a lead has sold.\n- Retrieve sale data for a sold lead.\n\n### Lead status\nThe status of the lead is broken down as below.\n\n| Status type code | Status type description | Status code | Status description                             |\n|------------------|-------------------------|-------------|------------------------------------------------|\n| 1                | Bought                  | 1           | Bought                                         |\n|                  |                         | 2           | Bought - Cust Notified                         |\n| 2                | On Market               | 10          | Resell Pending                                 |\n|                  |                         | 12          | Pending CS App                                 |\n|                  |                         | 13          | Analysing Data                                 |\n|                  |                         | 14          | On Market                                      |\n|                  |                         | 15          | Waiting Sale                                   |\n| 3                | Sold                    | 20          | Sold                                           |\n|                  |                         | 21          | Sold - Cust Notified                           |\n| 4                | Recalled                | 3           | Recalled                                       |\n|                  |                         | 4           | Recalled - Lead already on market              |\n|                  |                         | 5           | Recalled - No Buyer                            |\n|                  |                         | 22          | Recalled - Lead already on market bysameseller |\n| 5                | Preparing to Sell       | 11          | Pending Client                                 |\n|                  |                         | 16          | Error - no active bid on client                |\n\n### Non-compliant HTTP status codes\nWe have some non-compliant status codes that are returned in place of recognised HTTP status codes when specific errors occur.\n\n#### 701: Schema Validation Error\nSchema validation errors indicate that the data you've provided is invalid XML or it doesn't conform to our Seller schema.\n\n##### Example errors\n| Error message                                                                                                                        | Possible cause                                                                                                                           |\n|--------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n| Fatal Error 4: Start tag expected, '<' not found                                                                                     | Missing '<' at beginning of document.                                                                                                    |\n| Error 1872: The document has no document element.                                                                                    | Missing root element. This may also show in various other situations, including if you do not escape xml reserved characters (like \"&\"). |\n| Error 1826: Element 'Application_Date': '2016-08-10b' is not a valid value of the union type 'L_Empty_Date'.                         | Date supplied is in incorrect format.                                                                                                    |\n| Error 1843: Element 'Application': Character content other than whitespace is not allowed because the content type is 'element-only' | Some text is not properly contained in an element.                                                                                       |\n| Fatal Error 76: Opening and ending tag mismatch: Lead line 1 and Seller_Data                                                         | A tag has not been correctly opened or closed.                                                                                           |\n\n#### 702: Authentication Error\nAuthentication errors errors indicate that you're not authorised to perform the requested actions.\n\n##### Example errors\n| Error message                                                                       | Possible cause                                                                                                        |\n|-------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| Invalid API_Token                                                                   | The API_Token you passed in doesn't match the API_Key you used in the url.                                            |\n| Invalid CS_App_ID for API_Token                                                     | CS_App_ID doesn't exist or doesn't belong to you.                                                                     |\n| Invalid Lead_ID for API_Token                                                       | Lead_ID doesn't exist or doesn't belong to you.                                                                       |\n| Invalid Buyer_Token for API_Token                                                   | The Buyer_Token provided does not correspond to any leads you have purchased.                                         |\n| Invalid CS_App_ID for Client_ID                                                     | If you use the optional Client_ID parameter in settings. CS_App_ID doesn't exist or doesn't belong to this Client_ID. |\n| Client_ID not valid for API_Token                                                   | The Client_ID supplied doesn't exist or doesn't belong to you.                                                        |\n| Your API Key has not been activated yet, please contact us to activate your API key | The API profile your provided credentials link to is inactive. Contact us to activate it.                             |\n\n#### 703: Data Error\nData errors indicate that there's a mismatch between multiple bits of data you've provided.\n\n##### Example errors\n| Error message                                                                                                                              | Possible cause                                                                                                                                                                             |\n|--------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Lead_ID and CS_App_ID don't match                                                                                                          | If you have provided both Lead_ID and CS_App_ID, these two numbers don't match on our database.                                                                                            |\n| The Credit Sense application was completed more then 24 hours ago. For a lead to be sold the application must be completed within 24 hours | The CS_App_ID you have provided references a Credit Sense application that was completed more than 24 hours ago. For a lead to be sold, the application must be completed within 24 hours. |\n| The fields 'Lead_ID' and 'Buyer_Token' were both missing, please include one in your API call                                              | You have not provided either Lead_ID or Buyer_Token; one must be provided.                                                                                                                 |\n| The fields 'Lead_ID' and 'Buyer_Token' were both present, please include only one in your API call                                         | You have provided both Lead_ID and Buyer_Token; only one may be provided.                                                                                                                  |\n| Settings object key: 'App_Reference' has not been provided                                                                                 | The App_Reference parameter is missing from the API call.                                                                                                                                  |\n\n#### 704: Other Error\nOther errors indicate that there's a generic problem, not described above.\n\n| Error message                                                                                                                                                                                  | Possible cause                                                                              |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|\n| The API credentials you have provided are testing credentials and you haven't provided a valid Test_Sale_Outcome. When using test credentials you must include the Test_Sale_Outcome parameter | You're testing against a dev/test org unit and failed to pass in a valid test sale outcome. |",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      }
    },
    "/application/detail": {
      "post": {
        "summary": "Get the details for a lead",
        "operationId": "post-application-detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Warnings": {
                      "type": "array",
                      "description": "A list of warnings. e.g. features that are soon to be deprecated or features that are not yet supported by the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Success": {
                      "type": "boolean",
                      "description": "Denotes whether the lead was successfully created.",
                      "default": "True"
                    },
                    "Data": {
                      "type": "object",
                      "description": "The Lead ID as an integer or an object containing the Lead ID and Lead Token.",
                      "properties": {
                        "Lead": {
                          "$ref": "#/components/schemas/Lead-schema"
                        }
                      }
                    }
                  },
                  "required": [
                    "Warnings",
                    "Success",
                    "Data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Errors": {
                      "type": "array",
                      "description": "A list of errors.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error_type": {
                            "type": "string",
                            "default": "unauthorized",
                            "description": "Denotes the type of error encountered."
                          },
                          "error_code": {
                            "type": "string",
                            "default": "401.1",
                            "description": "The code that identifies the error."
                          },
                          "error_message": {
                            "type": "string",
                            "default": "Invalid API key.",
                            "description": "Describes the error."
                          }
                        },
                        "required": [
                          "error_type",
                          "error_code",
                          "error_message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "Errors"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Get the details for a specific lead.\n\nReasons to use this endpoint:\n- Retrieve all details for a sold or bought lead.\n\n### Non-compliant HTTP status codes\nWe have some non-compliant status codes that are returned in place of recognised HTTP status codes when specific errors occur.\n\n#### 701: Schema Validation Error\nSchema validation errors indicate that the data you've provided is invalid XML or it doesn't conform to our Seller schema.\n\n##### Example errors\n| Error message                                                                                                                        | Possible cause                                                                                                                           |\n|--------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n| Fatal Error 4: Start tag expected, '<' not found                                                                                     | Missing '<' at beginning of document.                                                                                                    |\n| Error 1872: The document has no document element.                                                                                    | Missing root element. This may also show in various other situations, including if you do not escape xml reserved characters (like \"&\"). |\n| Error 1826: Element 'Application_Date': '2016-08-10b' is not a valid value of the union type 'L_Empty_Date'.                         | Date supplied is in incorrect format.                                                                                                    |\n| Error 1843: Element 'Application': Character content other than whitespace is not allowed because the content type is 'element-only' | Some text is not properly contained in an element.                                                                                       |\n| Fatal Error 76: Opening and ending tag mismatch: Lead line 1 and Seller_Data                                                         | A tag has not been correctly opened or closed.                                                                                           |\n\n#### 702: Authentication Error\nAuthentication errors errors indicate that you're not authorised to perform the requested actions.\n\n##### Example errors\n| Error message                                                                       | Possible cause                                                                                                        |\n|-------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| Invalid API_Token                                                                   | The API_Token you passed in doesn't match the API_Key you used in the url.                                            |\n| Invalid CS_App_ID for API_Token                                                     | CS_App_ID doesn't exist or doesn't belong to you.                                                                     |\n| Invalid Lead_ID for API_Token                                                       | Lead_ID doesn't exist or doesn't belong to you.                                                                       |\n| Invalid Buyer_Token for API_Token                                                   | The Buyer_Token provided does not correspond to any leads you have purchased.                                         |\n| Invalid CS_App_ID for Client_ID                                                     | If you use the optional Client_ID parameter in settings. CS_App_ID doesn't exist or doesn't belong to this Client_ID. |\n| Client_ID not valid for API_Token                                                   | The Client_ID supplied doesn't exist or doesn't belong to you.                                                        |\n| Your API Key has not been activated yet, please contact us to activate your API key | The API profile your provided credentials link to is inactive. Contact us to activate it.                             |\n\n#### 703: Data Error\nData errors indicate that there's a mismatch between multiple bits of data you've provided.\n\n##### Example errors\n| Error message                                                                                                                              | Possible cause                                                                                                                                                                             |\n|--------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Lead_ID and CS_App_ID don't match                                                                                                          | If you have provided both Lead_ID and CS_App_ID, these two numbers don't match on our database.                                                                                            |\n| The Credit Sense application was completed more then 24 hours ago. For a lead to be sold the application must be completed within 24 hours | The CS_App_ID you have provided references a Credit Sense application that was completed more than 24 hours ago. For a lead to be sold, the application must be completed within 24 hours. |\n| The fields 'Lead_ID' and 'Buyer_Token' were both missing, please include one in your API call                                              | You have not provided either Lead_ID or Buyer_Token; one must be provided.                                                                                                                 |\n| The fields 'Lead_ID' and 'Buyer_Token' were both present, please include only one in your API call                                         | You have provided both Lead_ID and Buyer_Token; only one may be provided.                                                                                                                  |\n| Settings object key: 'App_Reference' has not been provided                                                                                 | The App_Reference parameter is missing from the API call.                                                                                                                                  |\n\n#### 704: Other Error\nOther errors indicate that there's a generic problem, not described above.\n\n| Error message                                                                                                                                                                                  | Possible cause                                                                              |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|\n| The API credentials you have provided are testing credentials and you haven't provided a valid Test_Sale_Outcome. When using test credentials you must include the Test_Sale_Outcome parameter | You're testing against a dev/test org unit and failed to pass in a valid test sale outcome. |",
        "tags": [
          "Applications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "API_Token": {
                    "type": "string",
                    "example": "daf90138-569f-4488-9f3b-099a58ac4130",
                    "description": "The unique token that identifies your API access privileges."
                  },
                  "Lead_ID": {
                    "type": "integer",
                    "example": 6605347,
                    "description": "Uniquely identifies the lead across Lead Market. If this is omitted, `$.Buyer_Token` must be present."
                  },
                  "Buyer_Token": {
                    "type": "string",
                    "description": "Uniquely identifies the lead across Lead Market for the Buyer. If this is omitted, `$.Lead_ID` must be present.",
                    "example": "UBSgSRGCLvfasymMDERYHNdtjSjBD72S"
                  },
                  "Extra_Info_Only": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Specify whether you'd like to only receive lead details added via the Lead Market buyer form."
                  }
                },
                "required": [
                  "API_Token"
                ]
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "required": true,
            "name": "Content-Type"
          }
        ]
      }
    },
    "/smart_campaigns/{id}/outcome_imports": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": ""
        }
      ],
      "post": {
        "summary": "Import bought lead outcomes",
        "operationId": "post-smart_campaigns-id-outcome_imports",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "description": "Provide application outcomes for leads you've bought.\n\nReasons to use this endpoint:\n- Feed funding outcomes into Smart Campaigns so further train and refine your Smart Campaigns algorithm.\n- Provide application outcomes in order to track conversion rates and cost per contract metrics via the Lead Market dashboard.",
        "tags": [
          "Bought lead outcomes"
        ]
      }
    },
    "/lists": {
      "get": {
        "summary": "",
        "operationId": "get-lists",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer",
                      "description": ""
                    },
                    "records_per_page": {
                      "type": "integer"
                    },
                    "total_records": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "list_id": {
                            "type": "integer"
                          },
                          "list_name": {
                            "type": "string"
                          },
                          "list_type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "description": "Returns a collection of blacklist lists.\n \nReasons to use this endpoint:\n- Retrieve all blacklist ",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "",
            "required": true,
            "default": "application/json"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "apiToken",
            "required": true
          }
        ]
      }
    },
    "/lists/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "records_per_page": {
                      "type": "integer"
                    },
                    "total_records": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "list_id": {
                            "type": "integer"
                          },
                          "list_name": {
                            "type": "string"
                          },
                          "list_type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-lists-id",
        "description": "Returns the details of the specified blacklist.\n\nReasons to use this endpoint:\n- Retrieve an individual blacklist",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "",
            "required": true,
            "default": "application/json"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "apiToken",
            "required": true
          }
        ]
      }
    },
    "/lists/{id}/records": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "string"
                    },
                    "records_per_page": {
                      "type": "integer"
                    },
                    "total_records": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "create_date": {
                            "type": "string"
                          },
                          "expiry": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-lists-id",
        "description": "Returns the individual items in the specified blacklist.\n\nReasons to use this endpoint:\n- To check the values that are blacklisted\n- To check if particular values are blacklisted by your organisation",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json",
              "example": ""
            },
            "in": "header",
            "name": "Content-Type",
            "description": "",
            "required": true,
            "default": "application/json",
            "explode": false,
            "allowEmptyValue": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "apiToken",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "values",
            "description": "Comma separated values"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "created_at_min",
            "description": "The minimum create date in ISO format (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "created_at_max",
            "description": "The maximum create date in ISO format (YYYY-MM-DD)"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Lead-schema": {
        "title": "Lead schema",
        "type": "object",
        "x-tags": [
          "Schemas"
        ],
        "description": "The structure of lead details for both sellers and buyers. \n\nShared objects between Sellers and Buyers:\n- `$.Lead.Applicant`\n- `$.Lead.Application`\n\nSeller-only object:\n- `$.Lead.Seller_Data`\n\nBuyer-only objects:\n- `$.Lead.Buyer_Data`\n- `$.Lead.Decision_Points`\n\n### Seller data validation\nWe take what may be thought of as a lax approach to validation on most data passed in by Sellers. This is not done to make Buyers integrations difficult; when a Seller is passing in details via the API it’s generally due to the lead not being engaged at the time. The stance we take on this is _it’s better to have some data that **may** be invalid, than no data_. A good example is when a customer provides a valid mobile number, but in the email address field of a Leadgen’s website. We’ll provide the raw values as the Seller has pushed them into Lead Market, and we’ll also provided validated contact details in the `$..V_Contact_Type` and `$..V_Contact_Value` fields.",
        "properties": {
          "Applicant": {
            "type": "object",
            "properties": {
              "Applicant_Type": {
                "type": "string",
                "example": "Primary",
                "description": "The type of applicant (e.g. Primary, Guarantor, Secondary, Business, etc.)"
              },
              "References": {
                "type": "object",
                "description": "Information about the relationship between the customer and any referees.",
                "properties": {
                  "Reference": {
                    "type": "array",
                    "description": "",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Relationship_Type": {
                          "type": "string",
                          "example": "Previous employer",
                          "description": "The referee's relationship to the applicant (e.g. friend, mother, employer, etc.)"
                        },
                        "Known_Applicant_Years": {
                          "type": "integer",
                          "description": "The number of years the referee has known the customer.",
                          "example": 3
                        },
                        "Person_Other": {
                          "type": "object",
                          "properties": {
                            "Title": {
                              "type": "string",
                              "description": "The person's title (e.g. Mr, Mrs, Ms, Dr, etc.)",
                              "example": "Ms"
                            },
                            "Date_Of_Birth": {
                              "type": "string",
                              "description": "The person's date of birth.",
                              "format": "date"
                            },
                            "Last_Name": {
                              "type": "string",
                              "description": "The person's last name.",
                              "example": "Rhoades"
                            },
                            "First_Name": {
                              "type": "string",
                              "description": "The person's first name.",
                              "example": "Wendy"
                            },
                            "Gender": {
                              "type": "string",
                              "description": "The person's gender (e.g. M, F).",
                              "example": "F"
                            },
                            "Contact_Methods": {
                              "type": "object",
                              "properties": {
                                "Contact_Method": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "Contact_Other": {
                                        "type": "object",
                                        "description": "Contact details (e.g. phone numbers, email addresses etc.)",
                                        "properties": {
                                          "Contact_Type": {
                                            "type": "string",
                                            "description": "The type of contact method (e.g. mobile, email, skype, work, home, fax, etc.)",
                                            "example": "mobile"
                                          },
                                          "Contact_Value": {
                                            "type": "string",
                                            "description": "The contact (e.g. email address, mobile number, skype address, etc.) For phone numbers we recommend using international format (e.g. AU = +614..., CA = +1..., NZ = +642...).",
                                            "example": "+61488853631"
                                          }
                                        }
                                      },
                                      "Address": {
                                        "type": "object",
                                        "description": "Information about the person's addresses.",
                                        "properties": {
                                          "Address_Line_1": {
                                            "type": "string",
                                            "description": "Building name, suite number, etc.",
                                            "example": "Aurora Tower"
                                          },
                                          "Address_Line_2": {
                                            "type": "string",
                                            "description": "Street number, name and type.",
                                            "example": "Level 69, 420 Queen Street"
                                          },
                                          "Suburb": {
                                            "type": "string",
                                            "description": "Suburb, Town, Municipality, etc.",
                                            "example": "Brisbane"
                                          },
                                          "State": {
                                            "type": "string",
                                            "description": "AU = State or Territory, CA = Province or Territory, NZ = Town or City.",
                                            "example": "QLD"
                                          },
                                          "Postcode": {
                                            "type": "integer",
                                            "description": "Postcode or Zip Code.",
                                            "example": 4000
                                          },
                                          "Is_Current": {
                                            "type": "boolean",
                                            "description": "Denotes whether this is the person's current address.",
                                            "example": "false"
                                          },
                                          "Residential_Type": {
                                            "type": "string",
                                            "description": "The type of residence (e.g. house, unit, rural, acreage, etc.)",
                                            "example": "Apartment"
                                          },
                                          "Residential_Status": {
                                            "type": "string",
                                            "description": "The person's relationhsip to the address (e.g. renting, buying, boarding, etc.)",
                                            "example": "Renting"
                                          },
                                          "Time_At_Address_Months": {
                                            "type": "string",
                                            "description": "The number of months the person has lived/did live at the address.",
                                            "example": 36
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Financials": {
                "type": "object",
                "description": "Information about the customer's income and liabilities.",
                "properties": {
                  "Financial": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Detailed_Income": {
                          "type": "object",
                          "description": "Detailed information about the customer's current or previous income.",
                          "properties": {
                            "Source": {
                              "type": "string",
                              "description": "The name of the source of the customer's income (e.g. Coles, Municipality of Manitoba, Vodafone, etc.)",
                              "example": "Axe Capital"
                            },
                            "Type": {
                              "type": "string",
                              "description": "The customer's income type (e.g. salary, benefits, rental, gift, etc.)",
                              "example": "Full-time"
                            },
                            "Frequency": {
                              "type": "string",
                              "description": "The frequency with which the customer is paid (e.g. weekly, fortnightly, monthly, etc.)",
                              "example": "weekly"
                            },
                            "Description": {
                              "type": "string",
                              "description": "Additional information about this income.",
                              "example": "This is the customer's primary income"
                            },
                            "Net_Amount": {
                              "type": "number",
                              "description": "The net amount of the customer's pay per frequency.",
                              "example": 2000
                            },
                            "Gross_Amount": {
                              "type": "number",
                              "description": "The gross amount of the customer's pay per frequency.",
                              "example": 3000
                            },
                            "Is_Current": {
                              "type": "boolean",
                              "description": "Denotes whether the source of income is current.",
                              "example": "false"
                            },
                            "Start_Date": {
                              "type": "string",
                              "format": "date",
                              "description": "The date this income began.",
                              "example": "2016-01-01"
                            },
                            "End_Date": {
                              "type": "string",
                              "format": "date",
                              "description": "The date this income ended.",
                              "example": "2020-08-26"
                            }
                          }
                        },
                        "Detailed_Liability": {
                          "type": "object",
                          "description": "Detailed information about the customer's current liabilities.",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "description": "The type of liability (e.g. ongoing, once-off).",
                              "example": "once-off"
                            },
                            "Frequency": {
                              "type": "string",
                              "description": "The frequency with which the liability is paid (e.g. weekly, fortnightly, monthly, etc.)",
                              "example": "monthly"
                            },
                            "Frequency_Amount": {
                              "type": "number",
                              "description": "The amount paid towards the liability per frequency.",
                              "example": 100
                            },
                            "Balance": {
                              "type": "number",
                              "description": "The amount currently owing on the liability.",
                              "example": 1000
                            },
                            "Start_Date": {
                              "type": "string",
                              "format": "date",
                              "description": "The date that the customer assumed the liability."
                            },
                            "Estimated_End_Date": {
                              "type": "string",
                              "format": "date",
                              "description": "The estimated date that the customer will finalise the liability."
                            },
                            "Description": {
                              "type": "string",
                              "description": "Description of the liability (e.g. rent, loan, living expenses, education, etc.)",
                              "example": "Personal Loan"
                            }
                          }
                        },
                        "Summary_Income": {
                          "type": "object",
                          "description": "Summary information about the customer's current income.",
                          "properties": {
                            "Net_Amount": {
                              "type": "number",
                              "example": "2000",
                              "description": "The net amount of the customer's pay per frequency."
                            },
                            "Gross_Amount": {
                              "type": "number",
                              "example": "3000",
                              "description": "The gross amount of the customer's pay per frequency."
                            },
                            "Frequency": {
                              "type": "string",
                              "example": "weekly",
                              "description": "The frequency with which the customer is paid (e.g. weekly, fortnightly, monthly, etc.)"
                            }
                          }
                        },
                        "Summary_Liability": {
                          "type": "object",
                          "description": "Summary information about the customer's current liabilities.",
                          "properties": {
                            "Amount": {
                              "type": "number",
                              "example": "100",
                              "description": "The amount paid towards the liability per frequency."
                            },
                            "Frequency": {
                              "type": "string",
                              "example": "monthly",
                              "description": "The frequency with which the liability is paid (e.g. weekly, fortnightly, monthly, etc.)"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Bank_Accounts": {
                "type": "object",
                "description": "Information about the customer's bank accounts.",
                "properties": {
                  "Bank_Account": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Account_Number": {
                          "type": "string",
                          "description": "The customer's account number.",
                          "example": "17012016"
                        },
                        "Account_Name": {
                          "type": "string",
                          "description": "The customer's account name.",
                          "example": "Super Saver"
                        },
                        "Bank_Name": {
                          "type": "string",
                          "description": "The name of the customer's bank.",
                          "example": "Mason Capital Savings and Loan"
                        },
                        "Account_Type": {
                          "type": "string",
                          "description": "The type of account (e.g. savings, cheque, etc.)",
                          "example": "Savings"
                        },
                        "BSB": {
                          "type": "string",
                          "description": "The customer's BSB or routing (transit) number.",
                          "example": "440003"
                        },
                        "Balance": {
                          "type": "string",
                          "description": "The customer's current account balance.",
                          "example": "10000"
                        },
                        "Age_Of_Account": {
                          "type": "string",
                          "description": "The age of the customer's account in years.",
                          "example": "4"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "Applicant"
        ]
      }
    }
  },
  "externalDocs": {
    "description": "Help docs",
    "url": "https://docs.creditsense.com.au"
  },
  "tags": [
    {
      "name": "Applications",
      "description": "Create and update leads, retrieve the status or details of a lead, or update the reference for a lead's Credit Sense application."
    },
    {
      "name": "Lists",
      "description": "Create and manage blacklisted leads."
    },
    {
      "name": "Bought lead outcomes",
      "description": "Provide progress updates and outcomes for purchased leads."
    },
    {
      "name": "Webhooks",
      "description": "Automatically receive reports as soon as they're generated.\n\nPlease refer to our [webhook help docs](https://docs.creditsense.com.au/display/CSI/Fully+integrated+webhook#space-menu-link-content)."
    },
    {
      "name": "Schemas",
      "description": "References describing the data formats we accept and deliver."
    }
  ]
}